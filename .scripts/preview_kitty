#!/usr/bin/env sh

CELL_HEIGHT=22
CELL_WIDTH=12

HEIGHT=$(($FZF_PREVIEW_LINES * $CELL_HEIGHT))
MAX_WIDTH=$(($FZF_PREVIEW_COLUMNS * $CELL_WIDTH))

TMP="/tmp/fzf-preview"
LTMP="$HOME/.cache/fzf-preview"
CACHEFILE="$TMP/$(echo "$1" | base64).png"
LCACHEFILE="$LTMP/$(echo "$1" | base64).png"

maketemp() {
	[ ! -d "$TMP" ] && mkdir -p "$TMP"
	[ ! -d "$LTMP" ] && mkdir -p "$LTMP"
}

previewclear() {
	printf '\033[2J\033[H' # Clear screen
}

text() {
	bat --pager=never --wrap never --style="changes" --color="always" "$1" -p
}

archive() {
	local filename="$1"
	local extension="${filename##*.}"

	# Determine the tool to use based on the file extension
	case "$extension" in
	zip)
		unzip -l "$filename" | awk 'NR>3 {print $4}'
		;;
	tar | tgz | tar.gz)
		tar -tf "$filename"
		;;
	tar.bz2 | tbz2)
		tar -tjf "$filename"
		;;
	tar.xz | txz)
		tar -tJf "$filename"
		;;
	rar)
		unrar l "$filename" | awk '/^[ ]+[0-9]/ {print $NF}'
		;;
	7z)
		7z l "$filename" | awk 'NR>18 {print $NF}'
		;;
	*)
		echo "Unsupported file type: $extension"
		;;
	esac
}

draw() {
	dimensions=$(identify -format "%wx%h" "$1")
	original_width=$(echo $dimensions | cut -d'x' -f1)
	original_height=$(echo $dimensions | cut -d'x' -f2)
	aspect_ratio=$(echo "scale=4; $original_width / $original_height" | bc)
	WIDTH=$(echo "scale=0; $HEIGHT * $aspect_ratio / 1" | bc)
	if [ "$WIDTH" -gt "$MAX_WIDTH" ]; then
		WIDTH=$MAX_WIDTH
		HEIGHT=$(echo "scale=0; $WIDTH / $aspect_ratio / 1" | bc)
	fi
	img2sixel -w "$WIDTH" -h "$HEIGHT" "$1"
}

image() {
	draw "$1"
}

# https://ffmpeg.org/ffmpeg-filters.html#showspectrum-1
audio() {
	[ ! -f "$CACHEFILE" ] && ffmpeg -loglevel 0 -y -i "$1" -lavfi "showspectrumpic=s=hd480:legend=0:gain=5:color=intensity" "$CACHEFILE"
	draw "$CACHEFILE"
}

video() {
	[ ! -f "$LCACHEFILE" ] && ffmpegthumbnailer -i "$1" -o "$LCACHEFILE" -s 1024 -q 10 &>/dev/null
	draw "$LCACHEFILE"
}

pdf() {
	[ ! -f "$CACHEFILE.png" ] && pdftoppm -png -singlefile "$1" "$CACHEFILE" -scale-to 1024
	draw "$CACHEFILE.png"
}

epub() {
	[ ! -f "$CACHEFILE" ] && epub-thumbnailer "$1" "$CACHEFILE" 1024
	draw "$CACHEFILE"
}

main() {
	previewclear
	maketemp
	mimetype=$(file -b --mime-type "$1")
    echo "$mimetype"

	case $mimetype in
	application/epub*)
		epub "$1"
		;;
	application/pdf)
		pdf "$1"
		;;
	application/zip | application/x-tar | *rar | application/gzip)
		archive "$1"
		;;
	audio/*)
		audio "$1"
		;;
	image/*)
		image "$1"
		;;
	text/*)
		text "$1"
		;;
	video/*)
		video "$1"
		;;
	inode/directory)
		[ "${1##*/..*}" = "" ] && echo || eza --icons --color=always --tree --level=2 --git "$1"
		;;
	*)
		text "$1"
		;;
	esac
}

main "$1"

