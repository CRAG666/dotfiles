(defwidget toggle [name var command icon]
  (eventbox
    :onclick "eww close system-menu; ${command} &"
    (box
      :space-evenly false
      :class "toggle ${var.state}"
      (button
        :class "button"
        :onclick "scripts/${name} toggle"
        (label
          :class "icon"
          :text {icon}))
      (label
        :class "text"
        :wrap true
        :text `${var.text} ${var.battery ?: ""}`))))

(defwidget system-menu []
  (box
    :class "system-menu-window"
    :orientation "v"
    :space-evenly false
    (box ; wifi/bluetooth/airplane buttons
      :orientation "v"
      :class "toggles"
      (toggle
        :name "net"
        :var net
        :command "XDG_CURRENT_DESKTOP=GNOME gnome-control-center"
        :icon {net.icon})
      (toggle
        :name "bluetooth"
        :var bluetooth
        :command "blueberry"
        :icon {bluetooth.state == "connected" ? "" : bluetooth.state == "enabled" ? "" : ""})
      (toggle
        :name "airplane"
        :var airplane
        :command ""
        :icon {airplane.icon}))
      
    (box ; brightness & volume sliders
      :class "sliders"
      :orientation "v"
      (box
        :class "volume"
        :space-evenly false
        (label
          :class "icon"
          :text {volume.icon})
        (scale
          :value {volume.percent}
          :tooltip "volume on ${volume.percent}%"
          :onchange "scripts/volume setvol SINK {}"))
      (box
        :class "brightness"
        :space-evenly false
        (label
          :class "icon"
          :text {brightness.icon})
        (scale
          :value {brightness.percent} 
          :tooltip "brightness on ${brightness.percent}%"
          :onchange "brillo -S {}")))

    (box ; battery info & power button
      :space-evenly false
      (box
        :class "battery"
        :space-evenly false
        (label
          :class "icon ${EWW_BATTERY.total_avg > 20 ? '' : 'low'}"
          :text {battery_icons[round(EWW_BATTERY.total_avg / (100 / arraylength(battery_icons)) - 1,0)]})
        (label
          :class "text"
          :text {round(EWW_BATTERY.total_avg,0)})
        (label
          :class "status text"
          :text {battery.status})
        (label
          :class "rate text"
          :text {battery.rate}))

      (box
        :hexpand true)
      (button
        :class "button power"
        :onclick "wlogout -p layer-shell & eww close system-menu"
        (label
          :class "icon"
          :text "")))))

(defwindow system-menu
  :stacking "fg" 
  :monitor 0
  :geometry (geometry
    :x "0"
    :y "0"
    :width "0%"
    :height "0%"
    :anchor "right top")
  :namespace "system-menu"
  (system-menu))
